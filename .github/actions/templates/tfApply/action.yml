name: 'ApplyTerraform'
description: 'Apply Terraform'

inputs:
  destroy:
    description: 'Destroy the infrastructure'
    required: false
    default: 'false'
  modulePath:
    description: 'Path to the Terraform module'
    required: false
    default: '.'
  backendStateKey:
    description: 'Key to the backend state file'
    required: false
    default: 'terraform.tfstate'
  terraformVersion:
    description: 'Terraform version to use'
    required: false
    default: '1.3.9'
  backendResourceGroupName:
    description: 'Resource group name for the backend state'
    required: true
  backendStorageAccountName:
    description: 'Storage account name for the backend state'
    required: true
  backendStorageContainerName:
    description: 'Storage container name for the backend state'
    required: true
  shell:
    description: 'Shell to use for the action'
    required: false
    default: 'bash'
  ARM_CLIENT_ID:
    description: 'Azure client ID'
    required: true
  ARM_SUBSCRIPTION_ID:
    description: 'Azure subscription ID'
    required: true
  ARM_TENANT_ID:
    description: 'Azure tenant ID'
    required: true


runs:
  using: 'composite'
  steps:
  - name: Download a single artifact
    id: download
    uses: actions/download-artifact@v3
    with:
      name: ${{ github.run_id }}.tfplan
      path: ${{ inputs.modulePath }}

  - name: Setup Terraform
    if: steps.download.outcome == 'success'
    uses: hashicorp/setup-terraform@v2
    with:
      terraformVersion: ${{ inputs.terraformVersion }}

  - name: Terraform Init
    id: init
    shell: ${{ inputs.shell }}
    working-directory: ${{ inputs.modulePath }}
    run: |
      terraform init \
        -backend-config="resource_group_name=${{ inputs.backendResourceGroupName }}"   \
        -backend-config="storage_account_name=${{ inputs.backendStorageAccountName }}" \
        -backend-config="container_name=${{ inputs.backendStorageContainerName }}"     \
        -backend-config="key=${{ inputs.backendStateKey }}"
    env:
      ARM_CLIENT_ID: ${{ inputs.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ inputs.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ inputs.ARM_TENANT_ID }}
      ARM_USE_OIDC: true

  - name: Terraform Apply
    id: apply
    shell: ${{ inputs.shell }}
    working-directory: ${{ inputs.modulePath }}
    run: |
      terraform apply \
        -auto-approve \
        -input=false \
        -no-color \
        tfplan
    env:
      ARM_CLIENT_ID: ${{ inputs.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ inputs.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ inputs.ARM_TENANT_ID }}
      ARM_USE_OIDC: true
