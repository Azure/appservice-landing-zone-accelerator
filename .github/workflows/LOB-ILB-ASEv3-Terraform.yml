name: 'ASEv3 Terraform'

on:
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Set to true to destroy infrastructure (default: false)'
        required: false
        default: false
  push:
    branches:
    # - main
      - jin/41/path-for-workflow-trigger-include-iac
    paths:
      - '.github/workflows/LOB-ILB-ASEv3-Terraform.yml'
      - 'reference-implementations/LOB-ILB-ASEv3/terraform/**'

  pull_request:
    branches:
    - main
    paths:
      - '.github/workflows/LOB-ILB-ASEv3-Terraform.yml'
      - 'reference-implementations/LOB-ILB-ASEv3/terraform/**'

env:
  modulePath: 'reference-implementations/LOB-ILB-ASEv3/terraform'
  terraform_version: 1.1.8

jobs:
  initialize_validate_plan:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare environment variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
        run: | 
          # Parse Azure secret into Terraform variables
          $servicePrincipal = ($env:AZURE_CREDENTIALS | ConvertFrom-Json)
          $env:ARM_CLIENT_ID = $servicePrincipal.clientId
          $env:ARM_CLIENT_SECRET = $servicePrincipal.clientSecret
          $env:ARM_SUBSCRIPTION_ID = $env:AZURE_SUBSCRIPTION
          $env:ARM_TENANT_ID = $servicePrincipal.tenantId
          
          # Save environment variable setup for subsequent steps
          Get-ChildItem -Path Env: -Recurse -Include ARM_*,TF_VAR_* | ForEach-Object {Write-Output "$($_.Name)=$($_.Value)"} >> $env:GITHUB_ENV
        shell: pwsh

      - name: Checkout the code
        uses: actions/checkout@main

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}

      # - uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        working-directory: ${{ env.modulePath }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ${{ env.modulePath }}
        run: terraform validate

      - name: Terraform Plan
        if: ${{ github.event.inputs.destroy == 'false' }}
        working-directory: ${{ env.modulePath }}
        continue-on-error: true
        run: |
          if [[ ${{ github.event.inputs.destroy }} == 'true' ]]; then
            terraform plan \
              -var-file="Parameters/uat.tfvars" \
              -out-file="${{ ${{ env.modulePath }}/asev3-${{github.run_number}}.tfplan/asev3-${{github.run_number}}.tfplan"
          else
            terraform plan -destroy \
              -var-file="Parameters/uat.tfvars" \
              -out-file="./asev3-${{github.run_number}}.tfplan"
          fi

      - name: Upload TF Plan
        uses: actions/upload-artifact@v3
        with:
          name: "asev3-${{github.run_number}}.tfplan"
          path: "./tfplan/asev3-${{github.run_number}}.tfplan"
          if-no-files-found: error
          retention-days: 1

  apply:
    runs-on: ubuntu-latest
    needs: initialize_validate_plan
    steps:
      - name: Prepare environment variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
        run: | 
          # Parse Azure secret into Terraform variables
          $servicePrincipal = ($env:AZURE_CREDENTIALS | ConvertFrom-Json)
          $env:ARM_CLIENT_ID = $servicePrincipal.clientId
          $env:ARM_CLIENT_SECRET = $servicePrincipal.clientSecret
          $env:ARM_SUBSCRIPTION_ID = $env:AZURE_SUBSCRIPTION
          $env:ARM_TENANT_ID = $servicePrincipal.tenantId
          
          # Save environment variable setup for subsequent steps
          Get-ChildItem -Path Env: -Recurse -Include ARM_*,TF_VAR_* | ForEach-Object {Write-Output "$($_.Name)=$($_.Value)"} >> $env:GITHUB_ENV
        shell: pwsh

      - name: Checkout the code
        uses: actions/checkout@main

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}

      - name: Download TF Plan
        uses: actions/download-artifact@v2
        with:
          name: "asev3-${{github.run_number}}.tfplan"
          path: "./tfplan/asev3-${{github.run_number}}.tfplan"

      - name: Terraform Apply
        working-directory: ${{ env.modulePath }}
        run: |
          terraform apply \
            -auto-approve \
            -input=false \
            asev3-${{github.run_number}}.tfplan
