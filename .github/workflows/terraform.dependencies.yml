name: 'Terraform Dependencies'

on:
  workflow_dispatch:
    inputs:
      createStorageAccount:
        description: 'Create Storage Account'
        required: true
        default: 'true'
        options:
          - 'true'
          - 'false'
      createStagingASE:
        description: 'Create Staging ASEv3?'
        required: true
        default: 'false'
        options:
          - 'true'
          - 'false'

permissions:
  id-token: write
  contents: read

env:
  location: 'westus2'
  resource_prefix: "backend-appsrvc"
  environment: "dev"
  suffix: "001"
  container_name: "tfstate"

jobs:
  provision-infrastructure-dependencies:
    name: "Create storage account and container for Terraform state"
    runs-on: ubuntu-latest
    steps:
      # Login to Azure via OIDC
      - name: Log in to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}
      
      - name: Create Resource Group
        id: rg
        run: |
          rg_name=${{ env.resource_prefix }}-${{ env.environment }}-${{env.location}}-${{ env.suffix }}
          if [ $(az group exists --name $rg_name) = false ]; then
            az group create \
              --name $rg_name \
              --location ${{ env.location }} 
          fi
          echo ::set-output name=rg_name::$rg_name
      
      - name: Create Storage Account
        if: ${{ github.event.inputs.createStorageAccount == 'true' }}
        run: |
          # Format name to 24 char limit, lowercase, and remove dashes
          st_name_prefix="$(echo st${{ env.resource_prefix }}${{ env.environment }} | cut -c1-15)"
          st_name_suffix="$(echo ${{ env.location }}${{ env.suffix }} | cut -c1-11)"
          formatted_st_name="$(echo ${st_name_prefix//-/}${st_name_suffix} | tr '[:upper:]' '[:lower:]')"

          if [ $(az storage account check-name --name $formatted_st_name --query nameAvailable) ]; then
            az storage account create \
              --name $formatted_st_name \
              --resource-group ${{ steps.rg.outputs.rg_name }} \
              --location ${{ env.location }} \
              --subscription ${{ secrets.AZURE_SUBSCRIPTION }} \
              --sku Standard_LRS

            az storage container create \
              --name ${{ env.container_name }} \
              --account-name $formatted_st_name
          fi
      - name: Create Staging ASEv3
        if: ${{ github.event.inputs.createStagingASE == 'true' }}
        run: |
          # Format name to 24 char limit, lowercase, and remove dashes
          ase_name_prefix="$(echo ase${{ env.resource_prefix }}${{ env.environment }} | cut -c1-15)"
          ase_name_suffix="$(echo ${{ env.location }}${{ env.suffix }} | cut -c1-11)"
          formatted_ase_name="$(echo ${ase_name_prefix//-/}${ase_name_suffix} | tr '[:upper:]' '[:lower:]')"

          if [ $(az storage account check-name --name $formatted_ase_name --query nameAvailable) ]; then
            az ase create \
              --name $formatted_ase_name \
              --resource-group ${{ steps.rg.outputs.rg_name }} \
              --location ${{ env.location }} \
              --subscription ${{ secrets.AZURE_SUBSCRIPTION }} \
              --tier Standard \
              --capacity 1 \
              --vnet-name ${{ env.resource_prefix }}-${{ env.environment }}-vnet-${{ env.suffix }} \
              --subnet ${{ env.resource_prefix }}-${{ env.environment }}-subnet-${{ env.suffix }} \
              --internal-load-balancing-mode None \
              --tags "environment=${{ env.environment }}" "resource_prefix=${{ env.resource_prefix }}" "suffix=${{ env.suffix }}"
          fi



