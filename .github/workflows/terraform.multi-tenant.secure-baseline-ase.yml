name: 'Multi-tenant ASEv3 Secure Baseline: Terraform Deploy'

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - jin/oidc-refactor
    paths:
      - '.github/workflows/terraform.multi-tenant.secure-baseline-ase.yml'
      - 'scenarios/secure-baseline-multitenant/terraform/**'
      - '!scenarios/secure-baseline-multitenant/**.md'

  pull_request:
    branches:
      - main
      - feature/*
    paths:
      - '.github/workflows/terraform.multi-tenant.secure-baseline-ase.yml'
      - 'scenarios/secure-baseline-multitenant/terraform/**'
      - '!scenarios/secure-baseline-multitenant/**.md'

permissions:
  id-token: write
  contents: read

env:
  modulePath: 'scenarios/secure-baseline-multitenant/terraform'
  terraform_version: 1.3.7 # must be greater than or equal to 1.2 for OIDC
  backend_key: secure-baseline-ase.tfstate

jobs:
  validate-plan-and-apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.modulePath }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@main

      # Log into Azure via OIDC
      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}

      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.AZURE_TF_STATE_RESOURCE_GROUP_NAME }}"   \
            -backend-config="storage_account_name=${{ secrets.AZURE_TF_STATE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.AZURE_TF_STATE_STORAGE_CONTAINER_NAME }}"     \
            -backend-config="key=${{ env.backend_key }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        continue-on-error: true
        run: |
          terraform plan \
            -var-file="Parameters/uat.tfvars"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Apply
        run: |
          terraform apply \
            -auto-approve \
            -var-file="Parameters/uat.tfvars"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true