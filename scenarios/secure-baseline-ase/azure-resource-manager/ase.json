{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.7.4.23292",
      "templateHash": "3009615781438677416"
    }
  },
  "parameters": {
    "workloadName": {
      "type": "string",
      "metadata": {
        "description": "A short name for the workload being deployed"
      }
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "uat",
        "prod",
        "dr"
      ],
      "metadata": {
        "description": "The environment for which the deployment is being executed"
      }
    },
    "vmUsername": {
      "type": "string",
      "metadata": {
        "description": "The user name to be used as the Administrator for all VMs created by this deployment"
      }
    },
    "vmPassword": {
      "type": "string",
      "metadata": {
        "description": "The password for the Administrator user for all VMs created by this deployment"
      }
    },
    "CICDAgentType": {
      "type": "string",
      "allowedValues": [
        "github",
        "azuredevops",
        "none"
      ],
      "metadata": {
        "description": "The CI/CD platform to be used, and for which an agent will be configured for the ASE deployment. Specify 'none' if no agent needed"
      }
    },
    "accountName": {
      "type": "string",
      "metadata": {
        "description": "The Azure DevOps or GitHub account name to be used when configuring the CI/CD agent, in the format https://dev.azure.com/ORGNAME OR github.com/ORGUSERNAME OR none"
      }
    },
    "personalAccessToken": {
      "type": "secureString",
      "metadata": {
        "description": "The Azure DevOps or GitHub personal access token (PAT) used to setup the CI/CD agent"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    }
  },
  "variables": {
    "resourceSuffix": "[format('{0}-{1}-{2}-001', parameters('workloadName'), parameters('environment'), parameters('location'))]",
    "networkingResourceGroupName": "[format('rg-networking-{0}', variables('resourceSuffix'))]",
    "sharedResourceGroupName": "[format('rg-shared-{0}', variables('resourceSuffix'))]",
    "aseResourceGroupName": "[format('rg-ase-{0}', variables('resourceSuffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('networkingResourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('aseResourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('sharedResourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "networkingresources",
      "resourceGroup": "[variables('networkingResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceSuffix": {
            "value": "[variables('resourceSuffix')]"
          },
          "createCICDAgentSubnet": {
            "value": "[if(equals(parameters('CICDAgentType'), 'none'), false(), true())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "4369162148847873761"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure location to which the resources are to be deployed"
              }
            },
            "resourceSuffix": {
              "type": "string",
              "metadata": {
                "description": "Standardized suffix text to be added to resource names"
              }
            },
            "createCICDAgentSubnet": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Indicator as to whether the CI/CD agent subnet should be created or not"
              }
            },
            "hubVNetNameAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/16",
              "metadata": {
                "description": "CIDR prefix to use for Hub VNet"
              }
            },
            "spokeVNetNameAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.0.0/16",
              "metadata": {
                "description": "CIDR prefix to use for Spoke VNet"
              }
            },
            "bastionAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.1.0/24",
              "metadata": {
                "description": "CIDR prefix to use for Bastion VNet"
              }
            },
            "CICDAgentNameAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.2.0/24",
              "metadata": {
                "description": "CIDR prefix to use CI/CD Agent VNet"
              }
            },
            "jumpBoxAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.3.0/24",
              "metadata": {
                "description": "CIDR prefix to use for Jumpbox VNet"
              }
            },
            "aseAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.1.0/24",
              "metadata": {
                "description": "CIDR prefix to use for ASE"
              }
            }
          },
          "variables": {
            "bastionHostName": "[format('snet-basthost-{0}', parameters('resourceSuffix'))]",
            "bastionHostPip": "[format('{0}-pip', variables('bastionHostName'))]",
            "hubVNetName": "[format('vnet-hub-{0}', parameters('resourceSuffix'))]",
            "spokeVNetName": "[format('vnet-spoke-{0}', parameters('resourceSuffix'))]",
            "bastionSubnetName": "AzureBastionSubnet",
            "CICDAgentSubnetName": "[format('snet-cicd-{0}', parameters('resourceSuffix'))]",
            "jumpBoxSubnetName": "[format('snet-jbox-{0}', parameters('resourceSuffix'))]",
            "aseSubnetName": "[format('snet-ase-{0}', parameters('resourceSuffix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "name": "[variables('hubVNetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('hubVNetNameAddressPrefix')]"
                  ]
                },
                "enableVmProtection": false,
                "enableDdosProtection": false,
                "subnets": [
                  {
                    "name": "[variables('bastionSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('bastionAddressPrefix')]"
                    }
                  },
                  {
                    "name": "[variables('jumpBoxSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('jumpBoxAddressPrefix')]"
                    }
                  },
                  {
                    "name": "[variables('CICDAgentSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('CICDAgentNameAddressPrefix')]"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "name": "[variables('spokeVNetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('spokeVNetNameAddressPrefix')]"
                  ]
                },
                "enableVmProtection": false,
                "enableDdosProtection": false,
                "subnets": [
                  {
                    "name": "[variables('aseSubnetName')]",
                    "properties": {
                      "delegations": [
                        {
                          "name": "hostingEnvironment",
                          "properties": {
                            "serviceName": "Microsoft.Web/hostingEnvironments"
                          }
                        }
                      ],
                      "addressPrefix": "[parameters('aseAddressPrefix')]"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/{1}-{2}', variables('hubVNetName'), variables('hubVNetName'), variables('spokeVNetName'))]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVNetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVNetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVNetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/{1}-{2}', variables('spokeVNetName'), variables('spokeVNetName'), variables('hubVNetName'))]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVNetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVNetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVNetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[variables('bastionHostPip')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2020-06-01",
              "name": "[variables('bastionHostName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionHostPip'))]"
                      },
                      "subnet": {
                        "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', variables('hubVNetName')), variables('bastionSubnetName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionHostPip'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVNetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVNetName'))]"
              ]
            }
          ],
          "outputs": {
            "hubVNetName": {
              "type": "string",
              "value": "[variables('hubVNetName')]"
            },
            "spokeVNetName": {
              "type": "string",
              "value": "[variables('spokeVNetName')]"
            },
            "hubVNetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVNetName'))]"
            },
            "spokeVNetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVNetName'))]"
            },
            "bastionSubnetName": {
              "type": "string",
              "value": "[variables('bastionSubnetName')]"
            },
            "CICDAgentSubnetName": {
              "type": "string",
              "value": "[if(parameters('createCICDAgentSubnet'), variables('CICDAgentSubnetName'), '')]"
            },
            "jumpBoxSubnetName": {
              "type": "string",
              "value": "[variables('jumpBoxSubnetName')]"
            },
            "aseSubnetName": {
              "type": "string",
              "value": "[variables('aseSubnetName')]"
            },
            "bastionSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', variables('hubVNetName')), variables('bastionSubnetName'))]"
            },
            "CICDAgentSubnetId": {
              "type": "string",
              "value": "[if(parameters('createCICDAgentSubnet'), format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', variables('hubVNetName')), variables('CICDAgentSubnetName')), '')]"
            },
            "jumpBoxSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', variables('hubVNetName')), variables('jumpBoxSubnetName'))]"
            },
            "aseSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', variables('spokeVNetName')), variables('aseSubnetName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('networkingResourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "sharedresources",
      "resourceGroup": "[variables('sharedResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "accountName": {
            "value": "[parameters('accountName')]"
          },
          "CICDAgentSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('networkingResourceGroupName')), 'Microsoft.Resources/deployments', 'networkingresources')).outputs.CICDAgentSubnetId.value]"
          },
          "CICDAgentType": {
            "value": "[parameters('CICDAgentType')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "jumpboxSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('networkingResourceGroupName')), 'Microsoft.Resources/deployments', 'networkingresources')).outputs.jumpBoxSubnetId.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "personalAccessToken": {
            "value": "[parameters('personalAccessToken')]"
          },
          "resourceGroupName": {
            "value": "[variables('sharedResourceGroupName')]"
          },
          "resourceSuffix": {
            "value": "[variables('resourceSuffix')]"
          },
          "vmPassword": {
            "value": "[parameters('vmPassword')]"
          },
          "vmUsername": {
            "value": "[parameters('vmUsername')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "8794426585251818202"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure location to which the resources are to be deployed"
              }
            },
            "jumpboxSubnetId": {
              "type": "string",
              "metadata": {
                "description": "The full id string identifying the target subnet for the jumpbox VM"
              }
            },
            "CICDAgentSubnetId": {
              "type": "string",
              "metadata": {
                "description": "The full id string identifying the target subnet for the CI/CD Agent VM"
              }
            },
            "vmUsername": {
              "type": "string",
              "metadata": {
                "description": "The user name to be used as the Administrator for all VMs created by this deployment"
              }
            },
            "vmPassword": {
              "type": "string",
              "metadata": {
                "description": "The password for the Administrator user for all VMs created by this deployment"
              }
            },
            "CICDAgentType": {
              "type": "string",
              "allowedValues": [
                "github",
                "azuredevops",
                "none"
              ],
              "metadata": {
                "description": "The CI/CD platform to be used, and for which an agent will be configured for the ASE deployment. Specify 'none' if no agent needed"
              }
            },
            "accountName": {
              "type": "string",
              "metadata": {
                "description": "The Azure DevOps or GitHub account name to be used when configuring the CI/CD agent, in the format https://dev.azure.com/ORGNAME OR github.com/ORGUSERNAME OR none"
              }
            },
            "personalAccessToken": {
              "type": "secureString",
              "metadata": {
                "description": "The Azure DevOps or GitHub personal access token (PAT) used to setup the CI/CD agent"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the shared resource group"
              }
            },
            "resourceSuffix": {
              "type": "string",
              "metadata": {
                "description": "Standardized suffix text to be added to resource names"
              }
            },
            "environment": {
              "type": "string",
              "allowedValues": [
                "dev",
                "uat",
                "prod",
                "dr"
              ],
              "metadata": {
                "description": "The environment for which the deployment is being executed"
              }
            }
          },
          "variables": {
            "tempKeyVaultName": "[take(format('kv-{0}', parameters('resourceSuffix')), 24)]",
            "keyVaultName": "[if(endsWith(variables('tempKeyVaultName'), '-'), substring(variables('tempKeyVaultName'), 0, sub(length(variables('tempKeyVaultName')), 1)), variables('tempKeyVaultName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'vmPassword')]",
              "properties": {
                "attributes": {
                  "enabled": true
                },
                "value": "[parameters('vmPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[variables('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enabledForTemplateDeployment": true,
                "accessPolicies": []
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "azmon",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "resourceSuffix": {
                    "value": "[parameters('resourceSuffix')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.7.4.23292",
                      "templateHash": "13461147443986656377"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure location to which the resources are to be deployed"
                      }
                    },
                    "resourceSuffix": {
                      "type": "string",
                      "metadata": {
                        "description": "Standardized suffix text to be added to resource names"
                      }
                    }
                  },
                  "variables": {
                    "appInsightsName": "[format('appi-{0}', parameters('resourceSuffix'))]",
                    "logAnalyticsWorkspaceName": "[format('log-{0}', parameters('resourceSuffix'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2021-06-01",
                      "name": "[variables('logAnalyticsWorkspaceName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "retentionInDays": 30,
                        "features": {
                          "searchVersion": 1
                        },
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[variables('appInsightsName')]",
                      "location": "[parameters('location')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "appInsightsConnectionString": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).ConnectionString]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[not(equals(parameters('CICDAgentType'), 'none'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "devopsvm",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetId": {
                    "value": "[parameters('CICDAgentSubnetId')]"
                  },
                  "username": {
                    "value": "[parameters('vmUsername')]"
                  },
                  "password": {
                    "value": "[parameters('vmPassword')]"
                  },
                  "vmName": {
                    "value": "[format('{0}-{1}', parameters('CICDAgentType'), parameters('environment'))]"
                  },
                  "accountName": {
                    "value": "[parameters('accountName')]"
                  },
                  "personalAccessToken": {
                    "value": "[parameters('personalAccessToken')]"
                  },
                  "CICDAgentType": {
                    "value": "[parameters('CICDAgentType')]"
                  },
                  "deployAgent": {
                    "value": true
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.7.4.23292",
                      "templateHash": "10495091187676996205"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure location to which the resources are to be deployed"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "The full id string identifying the target subnet for the VM"
                      }
                    },
                    "osDiskType": {
                      "type": "string",
                      "defaultValue": "Standard_LRS",
                      "metadata": {
                        "description": "Disk type of the IS disk"
                      }
                    },
                    "vmSize": {
                      "type": "string",
                      "defaultValue": "Standard_D4_v3",
                      "metadata": {
                        "description": "Valid SKU indicator for the VM"
                      }
                    },
                    "username": {
                      "type": "string",
                      "metadata": {
                        "description": "The user name to be used as the Administrator for all VMs created by this deployment"
                      }
                    },
                    "password": {
                      "type": "string",
                      "metadata": {
                        "description": "The password for the Administrator user for all VMs created by this deployment"
                      }
                    },
                    "windowsOSVersion": {
                      "type": "string",
                      "defaultValue": "2016-Datacenter",
                      "metadata": {
                        "description": "Windows OS Version indicator"
                      }
                    },
                    "vmName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the VM to be created"
                      }
                    },
                    "deployAgent": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicator to guide whether the CI/CD agent script should be run or not"
                      }
                    },
                    "accountName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The Azure DevOps or GitHub account name"
                      }
                    },
                    "personalAccessToken": {
                      "type": "secureString",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The personal access token to connect to Azure DevOps or Github"
                      }
                    },
                    "poolName": {
                      "type": "string",
                      "defaultValue": "Default",
                      "metadata": {
                        "description": "The name Azure DevOps or GitHub pool for this build agent to join. Use 'Default' if you don't have a separate pool."
                      }
                    },
                    "CICDAgentType": {
                      "type": "string",
                      "allowedValues": [
                        "github",
                        "azuredevops",
                        "none"
                      ],
                      "metadata": {
                        "description": "The CI/CD platform to be used, and for which an agent will be configured for the ASE deployment. Specify 'none' if no agent needed"
                      }
                    },
                    "artifactsLocation": {
                      "type": "string",
                      "defaultValue": "https://github.com/Azure/appservice-landing-zone-accelerator/raw/main/shared/agentsetup.ps1",
                      "metadata": {
                        "description": "The base URI where the CI/CD agent artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
                      }
                    }
                  },
                  "variables": {
                    "AgentName": "[format('agent-{0}', parameters('vmName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-04-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "zones": [
                        "1"
                      ],
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        },
                        "storageProfile": {
                          "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                              "storageAccountType": "[parameters('osDiskType')]"
                            }
                          },
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "[parameters('windowsOSVersion')]",
                            "version": "latest"
                          }
                        },
                        "osProfile": {
                          "computerName": "[parameters('vmName')]",
                          "adminUsername": "[parameters('username')]",
                          "adminPassword": "[parameters('password')]"
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-nic', parameters('vmName')))).outputs.nicId.value]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-nic', parameters('vmName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployAgent')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}', parameters('vmName'), 'CustomScript')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.10",
                        "settings": {
                          "fileUris": [
                            "[parameters('artifactsLocation')]"
                          ]
                        },
                        "protectedSettings": {
                          "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -Command ./agentsetup.ps1 -url {0} -pat {1} -agent {2} -pool {3} -agenttype {4} ', parameters('accountName'), parameters('personalAccessToken'), variables('AgentName'), parameters('poolName'), parameters('CICDAgentType'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-nic', parameters('vmName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "subnetId": {
                            "value": "[parameters('subnetId')]"
                          },
                          "vmName": {
                            "value": "[parameters('vmName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.7.4.23292",
                              "templateHash": "11380371510858792087"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Azure location to which the resources are to be deployed"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Id of the subnet within which the VM must be created"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "10.0.0.4",
                              "metadata": {
                                "description": "The private IP address to associated with this VM"
                              }
                            },
                            "vmName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the VM to be created"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2021-02-01",
                              "name": "[parameters('vmName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "privateIPAddress": "[parameters('privateIPAddress')]",
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('subnetId')]"
                                      },
                                      "primary": true,
                                      "privateIPAddressVersion": "IPv4"
                                    }
                                  }
                                ],
                                "dnsSettings": {
                                  "dnsServers": []
                                },
                                "enableAcceleratedNetworking": false,
                                "enableIPForwarding": false
                              }
                            }
                          ],
                          "outputs": {
                            "nicId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vmName'))]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "jumpboxwinvm",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetId": {
                    "value": "[parameters('jumpboxSubnetId')]"
                  },
                  "username": {
                    "value": "[parameters('vmUsername')]"
                  },
                  "password": {
                    "value": "[parameters('vmPassword')]"
                  },
                  "CICDAgentType": {
                    "value": "[parameters('CICDAgentType')]"
                  },
                  "vmName": {
                    "value": "[format('jumpbox-{0}', parameters('environment'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.7.4.23292",
                      "templateHash": "10495091187676996205"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure location to which the resources are to be deployed"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "The full id string identifying the target subnet for the VM"
                      }
                    },
                    "osDiskType": {
                      "type": "string",
                      "defaultValue": "Standard_LRS",
                      "metadata": {
                        "description": "Disk type of the IS disk"
                      }
                    },
                    "vmSize": {
                      "type": "string",
                      "defaultValue": "Standard_D4_v3",
                      "metadata": {
                        "description": "Valid SKU indicator for the VM"
                      }
                    },
                    "username": {
                      "type": "string",
                      "metadata": {
                        "description": "The user name to be used as the Administrator for all VMs created by this deployment"
                      }
                    },
                    "password": {
                      "type": "string",
                      "metadata": {
                        "description": "The password for the Administrator user for all VMs created by this deployment"
                      }
                    },
                    "windowsOSVersion": {
                      "type": "string",
                      "defaultValue": "2016-Datacenter",
                      "metadata": {
                        "description": "Windows OS Version indicator"
                      }
                    },
                    "vmName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the VM to be created"
                      }
                    },
                    "deployAgent": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicator to guide whether the CI/CD agent script should be run or not"
                      }
                    },
                    "accountName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The Azure DevOps or GitHub account name"
                      }
                    },
                    "personalAccessToken": {
                      "type": "secureString",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The personal access token to connect to Azure DevOps or Github"
                      }
                    },
                    "poolName": {
                      "type": "string",
                      "defaultValue": "Default",
                      "metadata": {
                        "description": "The name Azure DevOps or GitHub pool for this build agent to join. Use 'Default' if you don't have a separate pool."
                      }
                    },
                    "CICDAgentType": {
                      "type": "string",
                      "allowedValues": [
                        "github",
                        "azuredevops",
                        "none"
                      ],
                      "metadata": {
                        "description": "The CI/CD platform to be used, and for which an agent will be configured for the ASE deployment. Specify 'none' if no agent needed"
                      }
                    },
                    "artifactsLocation": {
                      "type": "string",
                      "defaultValue": "https://github.com/Azure/appservice-landing-zone-accelerator/raw/main/shared/agentsetup.ps1",
                      "metadata": {
                        "description": "The base URI where the CI/CD agent artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
                      }
                    }
                  },
                  "variables": {
                    "AgentName": "[format('agent-{0}', parameters('vmName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-04-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "zones": [
                        "1"
                      ],
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        },
                        "storageProfile": {
                          "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                              "storageAccountType": "[parameters('osDiskType')]"
                            }
                          },
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "[parameters('windowsOSVersion')]",
                            "version": "latest"
                          }
                        },
                        "osProfile": {
                          "computerName": "[parameters('vmName')]",
                          "adminUsername": "[parameters('username')]",
                          "adminPassword": "[parameters('password')]"
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-nic', parameters('vmName')))).outputs.nicId.value]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-nic', parameters('vmName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployAgent')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}', parameters('vmName'), 'CustomScript')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.10",
                        "settings": {
                          "fileUris": [
                            "[parameters('artifactsLocation')]"
                          ]
                        },
                        "protectedSettings": {
                          "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -Command ./agentsetup.ps1 -url {0} -pat {1} -agent {2} -pool {3} -agenttype {4} ', parameters('accountName'), parameters('personalAccessToken'), variables('AgentName'), parameters('poolName'), parameters('CICDAgentType'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-nic', parameters('vmName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "subnetId": {
                            "value": "[parameters('subnetId')]"
                          },
                          "vmName": {
                            "value": "[parameters('vmName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.7.4.23292",
                              "templateHash": "11380371510858792087"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Azure location to which the resources are to be deployed"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Id of the subnet within which the VM must be created"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "10.0.0.4",
                              "metadata": {
                                "description": "The private IP address to associated with this VM"
                              }
                            },
                            "vmName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the VM to be created"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2021-02-01",
                              "name": "[parameters('vmName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "privateIPAddress": "[parameters('privateIPAddress')]",
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('subnetId')]"
                                      },
                                      "primary": true,
                                      "privateIPAddressVersion": "IPv4"
                                    }
                                  }
                                ],
                                "dnsSettings": {
                                  "dnsServers": []
                                },
                                "enableAcceleratedNetworking": false,
                                "enableIPForwarding": false
                              }
                            }
                          ],
                          "outputs": {
                            "nicId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vmName'))]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "appInsightsConnectionString": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'azmon')).outputs.appInsightsConnectionString.value]"
            },
            "CICDAgentVmName": {
              "type": "string",
              "value": "devopsvm"
            },
            "jumpBoxvmName": {
              "type": "string",
              "value": "jumpboxwinvm"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('networkingResourceGroupName')), 'Microsoft.Resources/deployments', 'networkingresources')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('sharedResourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "aseresources",
      "resourceGroup": "[variables('aseResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('networkingResourceGroupName')), 'Microsoft.Resources/deployments', 'networkingresources')).outputs.spokeVNetId.value]"
          },
          "aseSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('networkingResourceGroupName')), 'Microsoft.Resources/deployments', 'networkingresources')).outputs.aseSubnetId.value]"
          },
          "aseSubnetName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('networkingResourceGroupName')), 'Microsoft.Resources/deployments', 'networkingresources')).outputs.aseSubnetName.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceSuffix": {
            "value": "[variables('resourceSuffix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "9496752574103796405"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure location to which the resources are to be deployed"
              }
            },
            "internalLoadBalancingMode": {
              "type": "string",
              "defaultValue": "Web, Publishing",
              "allowedValues": [
                "None",
                "Publishing",
                "Web",
                "Web, Publishing"
              ],
              "metadata": {
                "description": "The mode for the internal load balancing configuration to be applied to the ASE load balancer"
              }
            },
            "aseSubnetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the subnet to be used for ASE"
              }
            },
            "aseSubnetId": {
              "type": "string",
              "metadata": {
                "description": "The full id string identifying the target subnet for the ASE"
              }
            },
            "vnetId": {
              "type": "string",
              "metadata": {
                "description": "The full id string identifying the target vnet for the ASE"
              }
            },
            "numberOfWorkers": {
              "type": "int",
              "defaultValue": 3,
              "metadata": {
                "description": "The number of workers to be deployed in the worker pool"
              }
            },
            "workerPool": {
              "type": "string",
              "defaultValue": "1",
              "allowedValues": [
                "1",
                "2",
                "3"
              ],
              "metadata": {
                "description": "Specify the worker pool size SKU (1, 2, or 3) to be created"
              }
            },
            "resourceSuffix": {
              "type": "string",
              "metadata": {
                "description": "String to append to resources as part of naming standards"
              }
            }
          },
          "variables": {
            "aseName": "[take(format('ase-{0}', parameters('resourceSuffix')), 37)]",
            "appServicePlanName": "[format('asp-{0}', parameters('resourceSuffix'))]",
            "privateDnsZoneName": "[format('{0}.appserviceenvironment.net', variables('aseName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/hostingEnvironments",
              "apiVersion": "2021-02-01",
              "name": "[variables('aseName')]",
              "location": "[parameters('location')]",
              "kind": "ASEV3",
              "properties": {
                "internalLoadBalancingMode": "[parameters('internalLoadBalancingMode')]",
                "zoneRedundant": true,
                "virtualNetwork": {
                  "id": "[parameters('aseSubnetId')]",
                  "subnet": "[parameters('aseSubnetName')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-01-15",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hostingEnvironmentProfile": {
                  "id": "[resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))]"
                }
              },
              "sku": {
                "name": "[format('I{0}V2', parameters('workerPool'))]",
                "tier": "IsolatedV2",
                "size": "[format('I{0}V2', parameters('workerPool'))]",
                "capacity": "[parameters('numberOfWorkers')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateDnsZoneName')]",
              "location": "global",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), 'vnetLink')]",
              "location": "global",
              "properties": {
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                },
                "registrationEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), '*')]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(format('{0}/configurations/networking', resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))), '2020-06-01').internalInboundIpAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), '*.scm')]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(format('{0}/configurations/networking', resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))), '2020-06-01').internalInboundIpAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), '@')]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(format('{0}/configurations/networking', resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))), '2020-06-01').internalInboundIpAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            }
          ],
          "outputs": {
            "aseName": {
              "type": "string",
              "value": "[variables('aseName')]"
            },
            "aseId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/hostingEnvironments', variables('aseName'))]"
            },
            "appServicePlanName": {
              "type": "string",
              "value": "[variables('appServicePlanName')]"
            },
            "appServicePlanId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('aseResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('networkingResourceGroupName')), 'Microsoft.Resources/deployments', 'networkingresources')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('sharedResourceGroupName')), 'Microsoft.Resources/deployments', 'sharedresources')]"
      ]
    }
  ]
}